# this section is used to configure the
# complete server, including both options
# for the rest api and those related to
# the operation of the program itself.
[server]
# the user to change to once the program starts.
user = 'root'
# the port to host the rest server on.
port = 1337

# this section is used to configure options
# related to managing the files on disk.
[file_manager]
# the path to the root directory which the
# file server will start at. path names in
# queries will not include this folder.
path = './files'
# the maximum number of sub-directories
# allowed to be created via the api. existing
# directories above this depth can still be
# modified by creating files, but directories
# may not be created within it.
max_depth = 32

# this section is used to configure the
# database used to store file permissions,
# user authentication, and other data.
[database]
# the path for the database folder.
# it will be created if it does not exist.
path = './database'
# the version number for the database.
# do not modify this value unless updating
# versions or using an existing database.
version = 1

# this section manages the maximum size
# of the program's caches and the intervals
# at which data is purged, when necessary.
[cache]
# the number of user api keys to store.
# approx size per entry: 128B + key comment
keys = 10_000
# the number of permission ids to store.
# approx size per entry:
# - >32B with permissions_hash='none'   (8B int + 1B per path char including /)
# -  40B with permissions_hash='sha256' (8B int + 32B hash)
# -  72B with permissions_hash='sha512' (8B int + 64B hash)
permissions = 10_000
# the hash function used when storing file
# paths for the permissions cache. there is
# an EXTREMELY low (but non-zero) chance that
# using a hash function will lead to collisions,
# which may be detrimental for a file server
# containing sensitive files.
permissions_hash = 'sha256'
